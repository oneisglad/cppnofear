// Exercise 11.02.01
// This version of the normalize function is rewritten to
//  use division-assignment operator (/=).

#include <cstdlib>
class Fraction {
private:
int num, den; // Numerator and denominator.
public:
void set(int n, int d)
{num = n; den = d; normalize();}
int get_num() {return num;}
int get_den() {return den;}
private:
void normalize(); // Convert to standard form.
int gcf(int a, int b); // Greatest Common Factor.
int lcm(int a, int b); // Lowest Common Denom.
};
// Normalize: put fraction into standard form, unique
// for each mathematically different value.
//
void Fraction::normalize(){

    // Handle cases involving 0

    if (den == 0 || num == 0) {
        num = 0;
        den = 1;
    }

    // Put neg. sign in numerator only.

    if (den < 0) {
        num *= -1;
        den *= -1;
    }

    // Factor out GCF from numerator and denominator.

    int n = gcf(num, den);
    num /= n;                // ALTERED LINES
    den /= den;
}
